cxf.path=/service

# lets listen on all ports to ensure we can be invoked from the pod IP
server.address=0.0.0.0
management.address=0.0.0.0

# lets use a different management port
management.port=8081

# disable all management endpoints except health
endpoints.enabled = false
endpoints.health.enabled = true

# Set here configurations for the database connection
spring.datasource.url=jdbc:oracle:thin:@//192.168.9.204:1521/xe
spring.datasource.username=webmethods
spring.datasource.password=webmethods

spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle10gDialect




##Hibernate Configuration POSTGRESQL
#spring.datasource.driverClassName=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://localhost:5432/postgres2
#spring.datasource.username=postgres
#spring.datasource.password=
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=create