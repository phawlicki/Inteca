package family.service;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.2.4
 * 2018-05-13T20:47:25.105+02:00
 * Generated source version: 3.2.4
 *
 */
@WebService(targetNamespace = "http://service.family/", name = "FamilyData")
@XmlSeeAlso({ObjectFactory.class})
public interface FamilyData {

    @WebMethod(action = "urn:ReadMother")
    @RequestWrapper(localName = "readMother", targetNamespace = "http://service.family/", className = "family.service.ReadMother")
    @ResponseWrapper(localName = "readMotherResponse", targetNamespace = "http://service.family/", className = "family.service.ReadMotherResponse")
    @WebResult(name = "return", targetNamespace = "")
    public family.service.FamilyMember readMother(
        @WebParam(name = "surname", targetNamespace = "")
        java.lang.String surname
    );

    @WebMethod(action = "urn:CreateChild")
    @RequestWrapper(localName = "createChild", targetNamespace = "http://service.family/", className = "family.service.CreateChild")
    @ResponseWrapper(localName = "createChildResponse", targetNamespace = "http://service.family/", className = "family.service.CreateChildResponse")
    public void createChild(
        @WebParam(name = "fmember_name", targetNamespace = "")
        java.lang.String fmemberName,
        @WebParam(name = "surname", targetNamespace = "")
        java.lang.String surname,
        @WebParam(name = "date_of_birth", targetNamespace = "")
        java.lang.String dateOfBirth
    );

    @WebMethod(action = "urn:ReadChild")
    @RequestWrapper(localName = "readChild", targetNamespace = "http://service.family/", className = "family.service.ReadChild")
    @ResponseWrapper(localName = "readChildResponse", targetNamespace = "http://service.family/", className = "family.service.ReadChildResponse")
    @WebResult(name = "return", targetNamespace = "")
    public family.service.FamilyMember readChild(
        @WebParam(name = "surname", targetNamespace = "")
        java.lang.String surname
    );

    @WebMethod(action = "urn:ReadFather")
    @RequestWrapper(localName = "readFather", targetNamespace = "http://service.family/", className = "family.service.ReadFather")
    @ResponseWrapper(localName = "readFatherResponse", targetNamespace = "http://service.family/", className = "family.service.ReadFatherResponse")
    @WebResult(name = "return", targetNamespace = "")
    public family.service.FamilyMember readFather(
        @WebParam(name = "surname", targetNamespace = "")
        java.lang.String surname
    );

    @WebMethod(action = "urn:CreateFather")
    @RequestWrapper(localName = "createFather", targetNamespace = "http://service.family/", className = "family.service.CreateFather")
    @ResponseWrapper(localName = "createFatherResponse", targetNamespace = "http://service.family/", className = "family.service.CreateFatherResponse")
    public void createFather(
        @WebParam(name = "fmember_name", targetNamespace = "")
        java.lang.String fmemberName,
        @WebParam(name = "surname", targetNamespace = "")
        java.lang.String surname,
        @WebParam(name = "date_of_birth", targetNamespace = "")
        java.lang.String dateOfBirth
    );

    @WebMethod(action = "urn:CreateMother")
    @RequestWrapper(localName = "createMother", targetNamespace = "http://service.family/", className = "family.service.CreateMother")
    @ResponseWrapper(localName = "createMotherResponse", targetNamespace = "http://service.family/", className = "family.service.CreateMotherResponse")
    public void createMother(
        @WebParam(name = "fmember_name", targetNamespace = "")
        java.lang.String fmemberName,
        @WebParam(name = "surname", targetNamespace = "")
        java.lang.String surname,
        @WebParam(name = "date_of_birth", targetNamespace = "")
        java.lang.String dateOfBirth
    );
}
